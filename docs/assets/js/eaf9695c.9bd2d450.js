"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[596],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>c});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),m=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=m(e.components);return n.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,s=e.originalType,o=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=m(a),c=r,w=d["".concat(o,".").concat(c)]||d[c]||u[c]||s;return a?n.createElement(w,i(i({ref:t},p),{},{components:a})):n.createElement(w,i({ref:t},p))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=a.length,i=new Array(s);i[0]=d;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var m=2;m<s;m++)i[m]=a[m];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},3122:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>l,toc:()=>m});var n=a(7462),r=(a(7294),a(3905));const s={sidebar_position:2},i="Build WASM",l={unversionedId:"rust/build-wasm",id:"rust/build-wasm",title:"Build WASM",description:"Build for Browsers",source:"@site/docs/rust/build-wasm.md",sourceDirName:"rust",slug:"/rust/build-wasm",permalink:"/webassembly-examples-eratosthenes/rust/build-wasm",draft:!1,editUrl:"https://github.com/t-katsumura/webassembly-examples-eratosthenes/tree/main/website/docs/docs/rust/build-wasm.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Write Program",permalink:"/webassembly-examples-eratosthenes/rust/write-program"},next:{title:"Run WASM",permalink:"/webassembly-examples-eratosthenes/rust/run-wasm"}},o={},m=[{value:"Build for Browsers",id:"build-for-browsers",level:2},{value:"wasm-pack",id:"wasm-pack",level:3},{value:"wasm32-unknown-emscripten",id:"wasm32-unknown-emscripten",level:3},{value:"Build for Standalone",id:"build-for-standalone",level:2},{value:"wasm32-unknown-unknown",id:"wasm32-unknown-unknown",level:3},{value:"wasm32-wasi",id:"wasm32-wasi",level:3}],p={toc:m};function u(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"build-wasm"},"Build WASM"),(0,r.kt)("h2",{id:"build-for-browsers"},"Build for Browsers"),(0,r.kt)("h3",{id:"wasm-pack"},"wasm-pack"),(0,r.kt)("p",null,"Building rust program to WebAssembly for browsers uses ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/rustwasm/wasm-pack"},"wasm-pack"),".",(0,r.kt)("br",{parentName:"p"}),"\n","Run ",(0,r.kt)("inlineCode",{parentName:"p"},"cargo install wasm-pack")," or installer is available at ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/rustwasm/wasm-pack/releases"},"github releases")," or ",(0,r.kt)("a",{parentName:"p",href:"https://rustwasm.github.io/wasm-pack/"},"here"),"."),(0,r.kt)("p",null,"Run this command to build WebAssembly.",(0,r.kt)("br",{parentName:"p"}),"\n","More command line options can be found at ",(0,r.kt)("a",{parentName:"p",href:"https://rustwasm.github.io/docs/wasm-pack/commands/build.html"},"wasm-pack build"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="build for browsers"',title:'"build',for:!0,'browsers"':!0},"wasm-pack build --release --out-name prime --target web\n")),(0,r.kt)("p",null,"This command generate ",(0,r.kt)("inlineCode",{parentName:"p"},"prime.js")," , ",(0,r.kt)("inlineCode",{parentName:"p"},"prime_bg.wasm")," in ",(0,r.kt)("inlineCode",{parentName:"p"},"./pkg")," directory."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Generated ",(0,r.kt)("inlineCode",{parentName:"p"},"prime_bg.wasm")," can be run as standalone wasm.")),(0,r.kt)("h3",{id:"wasm32-unknown-emscripten"},"wasm32-unknown-emscripten"),(0,r.kt)("p",null,"When building wasm with ",(0,r.kt)("a",{parentName:"p",href:"https://emscripten.org/"},"emscripten")," targeting ",(0,r.kt)("inlineCode",{parentName:"p"},"wasm32-unknown-emscripten"),".",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"wasm32-unknown-emscripten")," target have to be installed."),(0,r.kt)("p",null,"This command shows all of the targets supported by rust.",(0,r.kt)("br",{parentName:"p"}),"\n","Check that ",(0,r.kt)("inlineCode",{parentName:"p"},"wasm32-unknown-emscripten")," is installed."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="list all targets"',title:'"list',all:!0,'targets"':!0},"rustup target list\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="targets list ouput"',title:'"targets',list:!0,'ouput"':!0},"// omit...\nwasm32-unknown-emscripten (installed)\n// omit...\n")),(0,r.kt)("p",null,"Or, you can install target with"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="add target"',title:'"add','target"':!0},"rustup target add wasm32-unknown-emscripten\n")),(0,r.kt)("p",null,"Additionally, ",(0,r.kt)("a",{parentName:"p",href:"https://emscripten.org/"},"emscripten")," have to be installed.",(0,r.kt)("br",{parentName:"p"}),"\n","Then add link option in ",(0,r.kt)("inlineCode",{parentName:"p"},".cargo/config.toml")," (see ",(0,r.kt)("a",{parentName:"p",href:"https://doc.rust-lang.org/cargo/reference/config.html"},"Configuration - The Cargo Book"),")."),(0,r.kt)("p",null,"This command build and generate ",(0,r.kt)("inlineCode",{parentName:"p"},"prime.wasm"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="build with targeting wasm32-unknown-emscripten"',title:'"build',with:!0,targeting:!0,'wasm32-unknown-emscripten"':!0},"cargo build --release --target wasm32-unknown-emscripten\n")),(0,r.kt)("h2",{id:"build-for-standalone"},"Build for Standalone"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"prime_bg.wasm")," which is generated by wasm-pack can be used as standalone wasm.",(0,r.kt)("br",{parentName:"p"}),"\n","Here show the ways to build WebAssembly using ",(0,r.kt)("inlineCode",{parentName:"p"},"cargo build"),"."),(0,r.kt)("p",null,"Before building standalone wasm, we need to check the build targets installed.",(0,r.kt)("br",{parentName:"p"}),"\n","This command shows all of the targets supported by rust."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="list all targets"',title:'"list',all:!0,'targets"':!0},"rustup target list\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="targets list ouput"',title:'"targets',list:!0,'ouput"':!0},"// omit...\nwasm32-unknown-unknown (installed)\nwasm32-wasi (installed)\n// omit...\n")),(0,r.kt)("p",null,"These targets are briefly expalined ",(0,r.kt)("a",{parentName:"p",href:"https://docs.wasmtime.dev/wasm-rust.html"},"here"),".",(0,r.kt)("br",{parentName:"p"}),"\n","You can install target using ",(0,r.kt)("inlineCode",{parentName:"p"},"rustup")," command."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="add target"',title:'"add','target"':!0},"rustup target add wasm32-unknown-unknowns\n")),(0,r.kt)("p",null,"Now, let's build standalone wasm. "),(0,r.kt)("p",null,"First, we need to comment out or remove the ",(0,r.kt)("inlineCode",{parentName:"p"},"wasm_bindgen")," attribute and unused import because wasm_bindgen adds or removes symbols for combining JavaScript.",(0,r.kt)("br",{parentName:"p"}),"\n","More document on ",(0,r.kt)("inlineCode",{parentName:"p"},"wasm_bindgen")," can be found at ",(0,r.kt)("a",{parentName:"p",href:"https://rustwasm.github.io/wasm-bindgen/"},"The wasm-bindgen Guide"),", ",(0,r.kt)("a",{parentName:"p",href:"https://crates.io/crates/wasm-bindgen/"},"wasm-bindgen - crates.io"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",2:!0,className:"language-rust",metastring:'title="comment out or remove these 2 lines"',title:'"comment',out:!0,or:!0,remove:!0,these:!0,'lines"':!0},"use wasm_bindgen::prelude::*;\n\n#[wasm_bindgen]\n")),(0,r.kt)("h3",{id:"wasm32-unknown-unknown"},"wasm32-unknown-unknown"),(0,r.kt)("p",null,"This command build standalone wasm for WASI and generates ",(0,r.kt)("inlineCode",{parentName:"p"},"prime_standalone.wasm"),(0,r.kt)("br",{parentName:"p"}),"\n","Then we can use .wasm standalone."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="build with targeting wasm3-unknown-unknown"',title:'"build',with:!0,targeting:!0,'wasm3-unknown-unknown"':!0},"cargo build --release --target wasm32-unknown-unknown\n")),(0,r.kt)("h3",{id:"wasm32-wasi"},"wasm32-wasi"),(0,r.kt)("p",null,"When targeting ",(0,r.kt)("inlineCode",{parentName:"p"},"wasm32-wasi"),", it may requires ",(0,r.kt)("a",{parentName:"p",href:"https://crates.io/crates/wasi"},"wasi crate")," and may requires fixing source code."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="build with targeting wasm3-wasi (sample program does not works on wasmer)"',title:'"build',with:!0,targeting:!0,"wasm3-wasi":!0,"(sample":!0,program:!0,does:!0,not:!0,works:!0,on:!0,'wasmer)"':!0},"cargo build --release --target wasm32-wasi\n")),(0,r.kt)("p",null,"This command generates ",(0,r.kt)("inlineCode",{parentName:"p"},"prime_standalone.wasm"),"."))}u.isMDXComponent=!0}}]);